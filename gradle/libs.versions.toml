[versions]

androidCompileSdk = "34"
androidTargetSdk = "34"
androidMinSdk = "26"
macaoAmadeusApi = "0.3.4"
macaoComponentToolkit = "0.6.10-rc02"
macaoAuthFirebase = "0.0.1-dev"
koinCore = "3.6.0-wasm-alpha2"
kotlin = "1.9.23"
agp = "8.1.4"
composeAndroidCompiler = "1.6.7"
composePlugin = "1.6.10-rc01"
androidxActivityCompose = "1.9.0"
kamelImage = "0.9.4"
kotlinxCoroutines = "1.8.0"
ktor = "2.3.10"
composeIcons = "1.1.0"
kotlinxSerialization = "1.6.3"
kotlinxDatetime = "0.5.0"
multiplatformSettings = "1.1.1"
gmazzo = "5.3.5"
sqldelight = "2.0.2"
dokka = "1.9.10"
realm = "1.12.0"

[libraries]

## AndroidX
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxActivityCompose" }

## Coroutines
kotlinx-coroutines-core-js = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-js", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }

## Image Loader
kamel-image = { module = "media.kamel:kamel-image", version.ref = "kamelImage" }

## Key Value Storage
multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }

## Koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koinCore" }

## Kotlinx Utils
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }

## Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

## MacaoSoftware
amadeus-api = { module = "io.github.pablichjenkov:amadeus-api", version.ref = "macaoAmadeusApi" }
component-toolkit = { module = "io.github.pablichjenkov:component-toolkit", version.ref = "macaoComponentToolkit" }
macao-auth-firebase = { module = "io.github.pablichjenkov:macao-auth-firebase", version.ref = "macaoAuthFirebase" }

## Other Libs
font-awesome = { module = "br.com.devsrsouza.compose.icons:font-awesome", version.ref = "composeIcons" }

## Preview
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "composeAndroidCompiler" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "composeAndroidCompiler" }

## Test
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koinCore" }

[plugins]

multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "composePlugin" }
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
gmazzo = { id = "com.github.gmazzo.buildconfig", version.ref = "gmazzo" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
realm = { id = "io.realm.kotlin", version.ref = "realm" }
